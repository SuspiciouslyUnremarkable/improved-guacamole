[sqlfluff]


# Supported dialects https://docs.sqlfluff.com/en/stable/perma/dialects.html
# Or run 'sqlfluff dialects'
dialect = snowflake

# One of [raw|jinja|python|placeholder]
templater = jinja


# rules = AL01, AL02, AL03, AL04, AL05


# Comma separated list of rules to exclude, or None
# See https://docs.sqlfluff.com/en/stable/perma/rule_disabling.html
# AM04 (ambiguous.column_count) and ST06 (structure.column_order) are
# two of the more controversial rules included to illustrate usage.
exclude_rules = ambiguous.column_count, structure.column_order

# The standard max_line_length is 80 in line with the convention of
# other tools and several style guides. Many projects however prefer
# something a little longer.
# Set to zero or negative to disable checks.
max_line_length = 120

# CPU processes to use while linting.
# The default is "single threaded" to allow easy debugging, but this
# is often undesirable at scale.
# If positive, just implies number of processes.
# If negative or zero, implies number_of_cpus - specified_number.
# e.g. -1 means use all processors but one. 0 means all cpus.
processes = -1

# If using the dbt templater, we recommend setting the project dir.
# [sqlfluff:templater:dbt]
# project_dir = ./

[sqlfluff:indentation]
# While implicit indents are not enabled by default. Many of the
# SQLFluff maintainers do use them in their projects.
allow_implicit_indents = True

[sqlfluff:rules:aliasing.length]
min_alias_length = 5

[sqlfluff:rules:aliasing.unique.column]

[sqlfluff:rules:aliasing.self_alias.column]

[sqlfluff:rules:ambiguous.distinct]

[sqlfluff:rules:ambiguous.column_count]

[sqlfluff:rules:ambiguous.join]
fully_qualify_join_types = both

[sqlfluff:rules:ambiguous.column_references]
group_by_and_order_by_style = explicit

[sqlfluff:rules:ambiguous.set_columns]

[sqlfluff:rules:ambiguous.join_condition]


[sqlfluff:rules:capitalisation.keywords]
capitalisation_policy = upper
[sqlfluff:rules:capitalisation.identifiers]
extended_capitalisation_policy = lower
[sqlfluff:rules:capitalisation.functions]
extended_capitalisation_policy = upper
[sqlfluff:rules:capitalisation.literals]
capitalisation_policy = upper
[sqlfluff:rules:capitalisation.types]
extended_capitalisation_policy = upper


[sqlfluff:rules:convention.not_equal]
preferred_not_equal_style = consistent

[sqlfluff:rules:convention.coalesce]

[sqlfluff:rules:convention.select_trailing_comma]
select_clause_trailing_comma = forbid

[sqlfluff:rules:convention.is_null]

[sqlfluff:rules:convention.statement_brackets]

[sqlfluff:rules:convention.left_join]

[sqlfluff:rules:convention.casting_style]
preferred_type_casting_style = consistent

[sqlfluff:rules:convention.join_condition]

[sqlfluff:rules:layout.spacing]


[sqlfluff:rules:layout.indent]


[sqlfluff:layout:type:comma]
line_position = leading:strict


[sqlfluff:layout.functions]

[sqlfluff:layout.cte_bracket]

[sqlfluff:layout.cte_newline]

[sqlfluff:layout.select_targets]

[sqlfluff:layout.select_modifiers]

[sqlfluff:layout.set_operators]
line_position = alone:strict

[sqlfluff:layout.end_of_file]

[sqlfluff:layout.start_of_file]

[sqlfluff:layout.keyword_newline]

[sqlfluff:layout.operators]

[sqlfluff:layout.newlines]
maximum_empty_lines_between_statements = 1
maximum_empty_lines_inside_statements = 0

[sqlfluff:references.from]

[sqlfluff:references.qualification]
single_table_references = unqualified

[sqlfluff:references.keywords]

[sqlfluff:references.special_chars]

[sqlfluff:structure.simple_case]

[sqlfluff:structure.unused_cte]

[sqlfluff:structure.nested_case]

[sqlfluff:structure.subquery]

[sqlfluff:structure.using]

[sqlfluff:structure.distinct]

[sqlfluff:structure.join_condition_order]

[sqlfluff:structure.constant_expression]

[sqlfluff:structure.unused_join]

